def can_traverse(gas,cost,start):
    n=len(gas)
    remaining=0
    i=start
    started=False
    while i!=start or not started:
        started=True
        remaining+=gas[i]-cost[i]
        if remaining<0:
            return False
        i=(i+1)%n
    return True
def gas_station(gas,cost):
    remaining=0
    candidate=0
    for i in range(len(gas)):
        remaining+=gas[i]-cost[i]
        if remaining<0:
            candidate=i+1
            remaining=0
    prev_remaining=sum(gas[:candidate])-sum(cost[:candidate])
    if candidate== len(gas)or remaining+prev_remaining<0:
        return -1
    else:
        return candidate


